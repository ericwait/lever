% version = GetVersion(command)
% Get a version string or number depending on the command argument. This
% m-file serves as a single repository for all version-related information.
%
% Note: Uses autogenerated version information in +Helper\VersionInfo.m

function version = GetVersion(command)
    version = [];
    
    if ( isdeployed )
        verInfo = Helper.VersionInfo();
    else
        verInfo = Dev.MakeVersion(1);
    end
    
    if ( ~exist('command','var') )
        command = 'string';
    end
    
    cleanBranch  = strrep(verInfo.branchName, '/', '_');
    cleanBranch  = strrep(cleanBranch, '\', '_');
    
    if ( strcmpi(command, 'string') || strcmpi(command, 'versionString') )
        version = [num2str(verInfo.majorVersion) '.' num2str(verInfo.minorVersion) ' ' cleanBranch];
        return;
    end
    
    if ( strcmpi(command, 'buildString') )
        version = [verInfo.buildNumber '/' verInfo.buildMachine];
        return;
    end
    
    if ( strcmpi(command, 'fullString') )
        version = [num2str(verInfo.majorVersion) '.' num2str(verInfo.minorVersion) '.' verInfo.buildNumber '/' verInfo.buildMachine ' ' cleanBranch];
        return;
    end
    
    if ( strcmpi(command, 'major') )
        version = verInfo.majorVersion;
        return
    end
    
    if ( strcmpi(command, 'minor') )
        version = verInfo.minorVersion;
        return;
    end
    
    if ( strcmpi(command, 'file') )
        minorStr = num2str(verInfo.minorVersion);
        minorStr = strrep(minorStr, '.', '_');
        version = [num2str(verInfo.majorVersion) minorStr '_' cleanBranch];
        return;
    end
    
end

